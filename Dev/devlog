v1.0.1
系统更新日志：<br/>
v1.0.1 测试版本第二开放版本。<br/>
本次更新的功能：增加了浏览器Cookie认证和服务器Session认证，一次登录可保持120s登陆状态。<br/>
Cookie + Session 服务端+客户端双重验证更加安全可靠。<br/>
Cookie存活时间内可以不必登录，访问"<b>/</b>"目录跳转到个人空间。<br/>

v1.0.2
系统更新日志：<br/>
v1.0.2 封闭测试版本。<br/>
本次更新的功能：增设了获取服务器本地IP的功能，可以根据不的网络自动配置Cookie中的domain信息，不必每次手动输入IP。<br/>
将获取IP的功能实现设计为函数，后续决定要不要单独设置一个包。<br/>
修正了第一次注册登陆的用户无法存储Cookie的问题，目前的Cookie自动刷新只有老用户登录、新用户注册两个接口可以调用。<br/>
setCookie 功能封装为一个方法，后续版本决定是否设置单独包和包合并的问题 **见H1**<br/>
消息系统开发：依托于Go模板引擎和JS解析JSON，从服务器发送系列化后的消息数据数组（JSON），通过模板传递给前端，前端JS代码调用模板获取JSON字符串，<br/>
将其用JS解析成可以识别的JS对象，呈现在页面上。<br/>
用户点击主页的“我的消息”会跳转到一个链接，链接中以表格的形式显示用户的消息列表，目前设置四个字段：Sender Receiver Content Read。<br/>
页面可以向任意用户发送消息:<br/>
通过本页面的form输入接收者学号、信件内容即可发送消息，发送失败（无效的接收者）会重载页面并标记错误，成功则会刷新页面。<br/>
>_H1:已创建Cookies包和SDUSTUser包用于存储跟Cookie相关的功能以及用户结构体及其相关方法<br/>

v1.0.3<br/>
系统更新日志<br/>
v1.0.3 封闭测试版本<br/>
我们的系统需要利用语言特性，需要添加并发功能来实现高流量的访问压力支撑。<br/>
<< 我必须要实现这一特性 >><br/>

